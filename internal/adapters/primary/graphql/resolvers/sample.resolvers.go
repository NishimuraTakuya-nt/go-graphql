package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"

	"github.com/NishimuraTakuya-nt/go-graphql/internal/adapters/primary/graphql/dto"
	"github.com/NishimuraTakuya-nt/go-graphql/internal/adapters/primary/graphql/mapper"
)

// CreateSample is the resolver for the createSample field.
func (r *mutationResolver) CreateSample(ctx context.Context, input dto.CreateSampleInput) (*dto.CreateSamplePayload, error) {
	createSample := mapper.ToDomainCreateSampleInput(&input)
	s, err := r.sampleUsecase.Create(ctx, createSample)
	if err != nil {
		return nil, err
	}

	d := mapper.ToDTO(s)
	return &dto.CreateSamplePayload{Sample: d}, nil
}

// Sample is the resolver for the sample field.
func (r *queryResolver) Sample(ctx context.Context, id string) (*dto.Sample, error) {
	s, err := r.sampleUsecase.Get(ctx, id)
	if err != nil {
		return nil, err
	}

	d := mapper.ToDTO(s)
	return d, nil
}
